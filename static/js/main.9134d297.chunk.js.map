{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.styled.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","console","log","FeedbackOptions","options","onLeaveFeedback","className","styles","feedbackOptionsContainers","map","el","feedbackOptionsBtn","type","onClick","Title","styled","h2","Div","div","Section","title","children","Notification","message","defaultProps","App","state","countFeedback","value","setState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kQA0BeA,EAvBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAE/C,OADAC,QAAQC,IAAIF,GAEV,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,a,gBCgBOG,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAOC,0BAAvB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBACEJ,UAAWC,IAAOI,mBAElBC,KAAK,SACLC,QAAS,WACPR,EAAgBK,IALpB,SAQGA,GANIA,S,cCRFI,EAAQC,IAAOC,GAAV,yEAKLC,EAAMF,IAAOG,IAAV,8CCWDC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACJ,EAAD,WACE,cAACH,EAAD,UAAQM,IACPC,MCLDC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KAGbD,EAAaE,aAAe,CAC1BD,QAAS,qBAOID,QCkDAG,E,4MA1DbC,MAAQ,CACN9B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP6B,cAAgB,SAACC,GACf,OAAQA,GACN,IAAK,OACH,EAAKC,SAAS,CAAEjC,KAAM,EAAK8B,MAAM9B,KAAO,IACxC,MACF,IAAK,UACH,EAAKiC,SAAS,CAAEhC,QAAS,EAAK6B,MAAM7B,QAAU,IAC9C,MACF,IAAK,MACH,EAAKgC,SAAS,CAAE/B,IAAK,EAAK4B,MAAM5B,IAAM,M,EAM5CgC,mBAAqB,WACnB,OAAO,EAAKJ,MAAM9B,KAAO,EAAK8B,MAAM7B,QAAU,EAAK6B,MAAM5B,K,EAE3DiC,gCAAkC,WAChC,IAAMhC,EAAQ,EAAK+B,qBACnB,OAAO/B,GAA4B,IAAlB,EAAK2B,MAAM9B,KAAcG,GAAOiC,QAAQ,GAAK,G,4CAEhE,WAAU,IAAD,EACwBC,KAAKP,MAA5B9B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQkC,KAAKH,qBACnB,OACE,qCACE,cAAC,EAAD,CAASV,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEhB,QAAS8B,OAAOC,KAAKF,KAAKP,OAC1BrB,gBAAiB4B,KAAKN,kBAI1B,cAAC,EAAD,CAASP,MAAO,aAAhB,SACGrB,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBiC,KAAKF,oCAG3B,cAAC,EAAD,CAAcR,QAAQ,+B,GAnDhBa,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,0BAA4B,mDAAmD,mBAAqB,+C","file":"static/js/main.9134d297.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  console.log(positivePercentage);\n  return (\n    <>\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Positive feedback: {positivePercentage}%</li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.string,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={styles.feedbackOptionsContainers}>\n      {options.map((el) => (\n        <button\n          className={styles.feedbackOptionsBtn}\n          key={el}\n          type=\"button\"\n          onClick={() => {\n            onLeaveFeedback(el);\n          }}\n        >\n          {el}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const Div = styled.div`\n  padding: 10px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Title, Div } from \"./Section.styled\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <Div>\n      <Title>{title}</Title>\n      {children}\n    </Div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.defaultProps = {\n  message: \"No feedback given\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedback = (value) => {\n    switch (value) {\n      case \"good\":\n        this.setState({ good: this.state.good + 1 });\n        break;\n      case \"neutral\":\n        this.setState({ neutral: this.state.neutral + 1 });\n        break;\n      case \"bad\":\n        this.setState({ bad: this.state.bad + 1 });\n        break;\n      default:\n    }\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    return total ? ((this.state.good * 100) / total).toFixed(0) : 0;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    return (\n      <>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.countFeedback}\n          />\n        </Section>\n\n        <Section title={\"Statistics\"}>\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOptionsContainers\":\"FeedbackOptions_feedbackOptionsContainers__3mNEQ\",\"feedbackOptionsBtn\":\"FeedbackOptions_feedbackOptionsBtn__3d576\"};"],"sourceRoot":""}